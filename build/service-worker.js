"use strict";var precacheConfig=[["/index.html","5cb9b7aa921934841acd05ead9c96b49"],["/static/css/main.9868e9e1.css","0ceec2defef774e2fe41280b05f85dbc"],["/static/js/main.aa0634c3.js","a01c92a331d85130e73e9231af0794ce"],["/static/media/EJS.b6c82eb4.png","b6c82eb4bd5f9786978dc2716ae6a864"],["/static/media/TechCheck.a73d1dfe.png","a73d1dfeeab8b60c89837533e96d27d7"],["/static/media/bootstrap-icon.222fa1db.svg","222fa1dbba700e7955fd84a399bb0170"],["/static/media/css.27951ea2.svg","27951ea225890ee5aa6da4967d9f952d"],["/static/media/expressjslogo.d3501596.png","d3501596f39ded0a77e9479b4f2cc258"],["/static/media/handlebars.9f18301a.svg","9f18301a14da523463e94a5fabc40bc4"],["/static/media/html.e1fe015c.svg","e1fe015cbbb933f7a5ce5780cee2486f"],["/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/static/media/material-ui.2fadd2a1.svg","2fadd2a137085081faa798150fee4a62"],["/static/media/mongoDB.e5eee315.png","e5eee315a17de0d7f56117077eb71fa9"],["/static/media/mysql-5.ff18385b.svg","ff18385bbe199c754c52a18a6f6bbc4a"],["/static/media/nodejs.b4f73153.svg","b4f7315308699964666c69062752d065"],["/static/media/profilePic.ca4e9829.jpg","ca4e98293eb42fe00b14a77cf72b7cea"],["/static/media/reactnativelogo.43e62539.png","43e6253901c4e32352b53a52cabbb403"],["/static/media/sequelize.43c9d125.svg","43c9d125de48e59cb29a88dd1b20bc46"],["/static/media/simpsonsClicky.a1cac072.png","a1cac072807c5a50323a57be469d7a50"],["/static/media/technology.f049c9ae.svg","f049c9ae761df9f8ca10e9748f79fd72"],["/static/media/triviaGame.6c62b7b7.png","6c62b7b765b0f041c17118226cf29253"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),a=urlsToCacheKeys.has(t));var c="/index.html";!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL(c,self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});